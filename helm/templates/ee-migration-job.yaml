{{- if .Values.ee.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "app.fullname" . }}-ee-migrations
  labels:
    {{- include "app.labels" . | nindent 4 }}
    app.kubernetes.io/component: ee-migrations
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-weight": "-5"
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
spec:
  backoffLimit: {{ .Values.ee.migrations.backoffLimit | default 3 }}
  activeDeadlineSeconds: {{ .Values.ee.migrations.activeDeadlineSeconds | default 300 }}
  template:
    metadata:
      labels:
        {{- include "app.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: ee-migrations
    spec:
      restartPolicy: Never
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: ee-migrations
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.ee.migrations.image.repository }}:{{ .Values.ee.migrations.image.tag | default .Chart.Version }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: DATABASE_URL
              value: "postgresql://{{ .Values.ee.database.user }}:$(DB_PASSWORD)@{{ .Values.ee.database.host }}:{{ .Values.ee.database.port }}/{{ .Values.ee.database.name }}"
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.ee.database.existingSecret }}
                  key: {{ .Values.ee.database.passwordKey }}
          resources:
            {{- toYaml .Values.ee.migrations.resources | nindent 12 }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
{{- end }} 